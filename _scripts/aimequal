#!/usr/bin/env zsh
set -euo pipefail

# Repo root
REPO_PATH="$(cd "$(dirname "$0")/.." && pwd)"
cd "$REPO_PATH"

# Create .temp directory if it doesn't exist
mkdir -p .temp

# Generate timestamp
TIMESTAMP=$(date +"%Y%m%d%H%M%S")
OUTPUT_FILE=".temp/aimequal.${TIMESTAMP}.txt"

# Prune old aimequal files (keep last 20)
echo "Pruning old aimequal output files..."
cd .temp
if ls aimequal.*.txt 1> /dev/null 2>&1; then
    ls -t aimequal.*.txt | tail -n +21 | xargs rm -f 2>/dev/null || true
    echo "Kept last 20 aimequal output files"
else
    echo "No old aimequal files to prune"
fi
cd ..

echo "Running aimequal tests at $(date)"
echo "Output will be saved to: $OUTPUT_FILE"
echo "=========================================="

# Function to run command and capture output
run_test() {
    local test_name="$1"
    local command="$2"
    
    echo "Running: $test_name"
    echo "Command: $command"
    echo "------------------------------------------"
    
    # Run command and capture output
    local output
    output=$(eval "$command" 2>&1)
    local exit_code=$?
    
    # Write output to file and display
    echo "$output" | tee -a "$OUTPUT_FILE"
    
    # Check for errors in output (even if exit code is 0)
    if [[ $exit_code -eq 0 ]] && ! echo "$output" | grep -q "error\|Error\|ERROR\|✖\|failed\|Failed\|FAILED"; then
        echo "✅ $test_name: PASSED"
        echo "------------------------------------------"
    else
        echo "❌ $test_name: FAILED"
        echo "Check $OUTPUT_FILE for details"
        exit 1
    fi
}

# Run tests sequentially, fail fast
run_test "Unit Tests" "pnpm test"
run_test "Code Quality" "pnpm hygiene"

echo "=========================================="
echo "All tests completed successfully!"
echo "Full output saved to: $OUTPUT_FILE"
